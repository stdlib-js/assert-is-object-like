// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).isObjectLike=t()}(this,(function(){"use strict";var e="function"==typeof Object.defineProperty?Object.defineProperty:null;var t=function(){try{return e({},"x",{}),!0}catch(e){return!1}},r=Object.defineProperty,n=Object.prototype,o=n.toString,i=n.__defineGetter__,a=n.__defineSetter__,u=n.__lookupGetter__,l=n.__lookupSetter__;var c=r,f=function(e,t,r){var c,f,y,p;if("object"!=typeof e||null===e||"[object Array]"===o.call(e))throw new TypeError("invalid argument. First argument must be an object. Value: `"+e+"`.");if("object"!=typeof r||null===r||"[object Array]"===o.call(r))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+r+"`.");if((f="value"in r)&&(u.call(e,t)||l.call(e,t)?(c=e.__proto__,e.__proto__=n,delete e[t],e[t]=r.value,e.__proto__=c):e[t]=r.value),y="get"in r,p="set"in r,f&&(y||p))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return y&&i&&i.call(e,t,r.get),p&&a&&a.call(e,t,r.set),e},y=t()?c:f;var p=function(e,t,r){y(e,t,{configurable:!1,enumerable:!1,writable:!1,value:r})};var b=function(){return"function"==typeof Symbol&&"symbol"==typeof Symbol("foo")}();var _=function(){return b&&"symbol"==typeof Symbol.toStringTag},s=Object.prototype.toString,d=s;var v=function(e){return d.call(e)},m=Object.prototype.hasOwnProperty;var g=function(e,t){return null!=e&&m.call(e,t)},j="function"==typeof Symbol?Symbol.toStringTag:"",h=g,w=j,S=s;var O=v,A=function(e){var t,r,n;if(null==e)return S.call(e);r=e[w],t=h(e,w);try{e[w]=void 0}catch(t){return S.call(e)}return n=S.call(e),t?e[w]=r:delete e[w],n},T=_()?A:O;var P=Array.isArray?Array.isArray:function(e){return"[object Array]"===T(e)};var k=function(e){return null!==e&&"object"==typeof e};return p(k,"isObjectLikeArray",function(e){if("function"!=typeof e)throw new TypeError("invalid argument. Must provide a function. Value: `"+e+"`.");return function(t){var r,n;if(!P(t))return!1;if(0===(r=t.length))return!1;for(n=0;n<r;n++)if(!1===e(t[n]))return!1;return!0}}(k)),k}));
//# sourceMappingURL=bundle.js.map
