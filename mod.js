// Copyright (c) 2023 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var r="function"==typeof Object.defineProperty?Object.defineProperty:null;var t,e=Object.defineProperty,o=Object.prototype,n=o.toString,a=o.__defineGetter__,l=o.__defineSetter__,i=o.__lookupGetter__,u=o.__lookupSetter__;t=function(){try{return r({},"x",{}),!0}catch(r){return!1}}()?e:function(r,t,e){var c,f,y,p;if("object"!=typeof r||null===r||"[object Array]"===n.call(r))throw new TypeError("invalid argument. First argument must be an object. Value: `"+r+"`.");if("object"!=typeof e||null===e||"[object Array]"===n.call(e))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+e+"`.");if((f="value"in e)&&(i.call(r,t)||u.call(r,t)?(c=r.__proto__,r.__proto__=o,delete r[t],r[t]=e.value,r.__proto__=c):r[t]=e.value),y="get"in e,p="set"in e,f&&(y||p))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return y&&a&&a.call(r,t,e.get),p&&l&&l.call(r,t,e.set),r};var c=t;var f="function"==typeof Symbol&&"symbol"==typeof Symbol("foo");var y=Object.prototype.toString;var p=Object.prototype.hasOwnProperty;var b,_="function"==typeof Symbol?Symbol.toStringTag:"";b=f&&"symbol"==typeof Symbol.toStringTag?function(r){var t,e,o,n,a;if(null==r)return y.call(r);e=r[_],a=_,t=null!=(n=r)&&p.call(n,a);try{r[_]=void 0}catch(t){return y.call(r)}return o=y.call(r),t?r[_]=e:delete r[_],o}:function(r){return y.call(r)};var v,s=b;v=Array.isArray?Array.isArray:function(r){return"[object Array]"===s(r)};var d=v;function m(r){return null!==r&&"object"==typeof r}var g=function(r){if("function"!=typeof r)throw new TypeError("invalid argument. Must provide a function. Value: `"+r+"`.");return function(t){var e,o;if(!d(t))return!1;if(0===(e=t.length))return!1;for(o=0;o<e;o++)if(!1===r(t[o]))return!1;return!0}}(m);c(m,"isObjectLikeArray",{configurable:!1,enumerable:!1,writable:!1,value:g});export{m as default,g as isObjectLikeArray};
//# sourceMappingURL=mod.js.map
